- hosts: all
  become: yes
  vars:
    zeus_db_password: "{{ (lookup('file', 'secrets/zeus-secrets-{{ inventory_hostname }}.json') | from_json)['db_password'] }}"
  tasks:

    - name: zeus user
      user:
        name: zeus
        shell: /bin/bash
        home: /srv/zeus/

    - name: www-data user
      user:
        name: www-data
        groups: zeus
        append: yes

    - apt: pkg={{ item }} state=latest
      with_items:
        - postgresql-9.5
        - libpq-dev
        - python-psycopg2
        - libicu-dev
        - libgmp-dev
        - libmpfr-dev
        - libmpc-dev
        - g++
        # TODO configure Redis, set up a password
        - redis-server

    - name: zeus database
      postgresql_db:
        name: zeus
      become_user: postgres

    - name: zeus postgres user
      postgresql_user:
        name: zeus
        db: zeus
        password: "{{ zeus_db_password }}"
      become_user: postgres

    - name: config dir
      file:
        path: /srv/zeus/config
        state: directory
        owner: zeus
        group: zeus

    - name: secrets.json
      copy:
        src: 'secrets/zeus-secrets-{{ inventory_hostname }}.json'
        dest: /srv/zeus/config/secrets.json
        owner: zeus
        group: zeus
        mode: 0770

    - name: settings_local.py
      template:
        src: templates/zeus_settings_local.py
        dest: /srv/zeus/config/settings_local.py
        owner: zeus
        group: zeus
        mode: 0770

    - name: uwsgi.ini
      template:
        src: templates/zeus_uwsgi.ini
        dest: /srv/zeus/uwsgi.ini
        owner: zeus

    - name: /var/run/zeus
      file:
        path: /var/run/zeus
        state: directory
        owner: zeus
        group: zeus
        mode: 0770

    - name: uwsgi service configuration
      template:
        src: templates/zeus-uwsgi.service
        dest: /etc/systemd/system/zeus-uwsgi.service
      notify: systemctl daemon-reload

    - name: worker service configuration
      template:
        src: templates/zeus-worker.service
        dest: /etc/systemd/system/zeus-worker.service
      notify: systemctl daemon-reload

    - name: nginx template
      template:
        src: templates/zeus-nginx.conf
        dest: /etc/nginx/sites-available/zeus
      notify: reload nginx

    - name: symlink nginx template
      file:
        src: /etc/nginx/sites-available/zeus
        dest: /etc/nginx/sites-enabled/zeus
        state: link
      notify: reload nginx

    # Deploy!

    - name: check git repo
      git:
        repo: "{{ zeus_git_repo }}"
        dest: /srv/zeus/install
        version: "{{ zeus_git_version }}"
      become_user: zeus
      register: git_repo
      tags: [deploy]
      check_mode: yes

    - name: deploy new version
      tags: [deploy]
      when: git_repo.changed
      block:

      - name: stop services
        service: name="{{ item }}" state=stopped
        with_items:
          - zeus-uwsgi
          - zeus-worker

      - name: update source
        git:
          repo: "{{ zeus_git_repo }}"
          dest: /srv/zeus/install
          version: "{{ zeus_git_version }}"
        become_user: zeus

      - name: pipenv sync
        shell: |
          . ../virtualenv/bin/activate
          pipenv sync
        args:
          chdir: /srv/zeus/install
        become_user: zeus

      - name: update static files
        shell: |
          . ../virtualenv/bin/activate
          rm -rf sitestatic
          python manage.py collectstatic --noinput
        args:
          chdir: /srv/zeus/install
        become_user: zeus

      - name: start services
        service: name="{{ item }}" state=started
        with_items:
          - zeus-uwsgi
          - zeus-worker

  handlers:
    - name: reload nginx
      service: name=nginx state=reloaded
    - name: systemctl daemon-reload
      command: systemctl daemon-reload
